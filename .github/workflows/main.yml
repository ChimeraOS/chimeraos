name: System image build
on:
  push:
    branches:
    - 'master'
jobs:
  # create json so pkgbuilds can be run in parrallel.
  list-pkgbuilds:
    runs-on: ubuntu-latest
    outputs:
      custom-pkgs: ${{ steps.set-custom-pkgs.outputs.matrix }}
      aur-pkgs: ${{ steps.set-aur-pkgs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-custom-pkgs
        run: echo "matrix=$(ls -d pkgs/* | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
      - id: set-aur-pkgs
        run: source ./manifest ; echo "matrix=$(echo ${AUR_PACKAGES} | jq -R -s -c 'split(" ")[:-1]')" >> $GITHUB_OUTPUT
        shell: bash

  aur-pkgbuild:
    needs: list-pkgbuilds
    name: Build AUR package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        package: ${{ fromJson(needs.list-pkgbuilds.outputs.aur-pkgs) }}
    steps:
      - run: git clone https://aur.archlinux.org/${{ matrix.package }}.git ${{ matrix.package }}
      - if: ${{ !endsWith( matrix.package, '-git') }}
        name: Cache package
        id: aur-cache
        uses: actions/cache@v3
        with:
          key: ${{ matrix.package }}-${{ hashFiles(format('{0}/PKGBUILD', matrix.package)) }}
          path: ${{ matrix.package }}/*.pkg.tar*
      - if: ${{ steps.aur-cache.outputs.cache-hit != 'true' || endsWith( matrix.package, '-git') }}
        name: Makepkg Build and Check
        id: makepkg
        uses: boukehaarsma23/pkgbuild-action@v3.0.0
        with:
          pkgdir: ${{ matrix.package }}
          namcapDisable: yes
    # remove any epoch (:) in name, replace with --
      - if: ${{ steps.aur-cache.outputs.cache-hit != 'true' || endsWith( matrix.package, '-git') }}
        name: remove epoch in name
        run:
          find ${{ matrix.package }}/*.pkg.tar.zst -type f -name '*:*' -execdir bash -c 'mv "$1" "${1//:/--}"' bash {} \;
      - name: Upload Package Archives
        uses: actions/upload-artifact@v3
        with:
            name: aur-packages
            path: ${{ matrix.package }}/*.pkg.tar*

  custom-pkgbuild:
    needs: list-pkgbuilds
    name: Build package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        pkgbuild_dir: ${{ fromJson(needs.list-pkgbuilds.outputs.custom-pkgs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - if: ${{ !endsWith( matrix.pkgbuild_dir, '-git') }}}}
        name: Cache package
        id: custom-cache
        uses: actions/cache@v3
        with:
          key: ${{ matrix.pkgbuild_dir }}-${{ hashFiles(format('{0}/PKGBUILD', matrix.pkgbuild_dir)) }}
          path: ${{ matrix.pkgbuild_dir }}/*.pkg.tar*
      - if: ${{ steps.custom-cache.outputs.cache-hit != 'true' || endsWith( matrix.pkgbuild_dir, '-git') }}
        name: Makepkg Build and Check
        id: makepkg
        uses: boukehaarsma23/pkgbuild-action@v3.0.0
        with:
          pkgdir: ${{ matrix.pkgbuild_dir }}
          namcapDisable: yes
    # remove any epoch (:) in name, replace with --
      - if: ${{ steps.custom-cache.outputs.cache-hit != 'true' || endsWith( matrix.pkgbuild_dir, 'git') }}
        name: remove epoch in name
        run:
          find ${{ matrix.pkgbuild_dir }}/*.pkg.tar.zst -type f -name '*:*' -execdir bash -c 'mv "$1" "${1//:/--}"' bash {} \;
      - name: Upload Package Archives
        uses: actions/upload-artifact@v3
        with:
            name: custom-packages
            path: ${{ matrix.pkgbuild_dir }}/*.pkg.tar*

  build:
    needs:
      - custom-pkgbuild
      - aur-pkgbuild
    name: System image build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.build_image.outputs.version }}
      display_name: ${{ steps.build_image.outputs.display_name }}
      display_version: ${{ steps.build_image.outputs.display_version }}
      image_filename: ${{ steps.build_image.outputs.image_filename }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
            name: custom-packages
            path: pkgs/
      - uses: actions/download-artifact@v3
        with:
            name: aur-packages
            path: aur-pkgs/
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: pkgs/
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: aur-pkgs/
      # readd any epoch (:) in name, replaced with -- in previous step
      - name: readd epoch in name
        run: find pkgs/*.pkg.tar* -type f -name '*:*' -execdir bash -c 'mv "$1" "${1//--/:}"' bash {} \;
      - name: Change directory
        run: cd $GITHUB_WORKSPACE
      - name: Obtain base docker image
        run: docker pull archlinux:latest
      - name: Create docker build image
        run: docker build --no-cache -t image-builder:latest .
      - name: Build system image
        id: build_image
        run: docker run --rm -v $(pwd):/workdir -v $(pwd)/output:/output -v $GITHUB_OUTPUT:$GITHUB_OUTPUT -e "GITHUB_OUTPUT=$GITHUB_OUTPUT" --privileged=true image-builder:latest $(echo ${GITHUB_SHA} | cut -c1-7)

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.build_image.outputs.version }}
          name: ${{ steps.build_image.outputs.display_name }} ${{ steps.build_image.outputs.display_version }} [UNSTABLE]
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          files: |
            output/${{ steps.build_image.outputs.image_filename }}
            output/build_info.txt
            output/sha256sum.txt
